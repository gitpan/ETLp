<prices>
	type               = iterative
	
	<config>
		filename_format    = ^(prices(\d{14}).csv)(?:\.gz(?:\.pgp)?)?$
		posix_date_fomat   = %Y%m%d%H%M%S
		incoming_dir       = /data/comit/incoming
		archive_dir        = /data/comit/archive
		fail_dir           = /data/comit/fail		
		table_name         = stg_prices
		controlfile_dir    = /data/load/conf/control
		controlfile        = final_price.ctl
		on_error           = die
	</config>
	
	<pre_process>
		<item>
			name     = decrypt
			type     = perl
			package  = DW::Decrypt
			method   = decrypt			
			on_error = next
                        <params/>
		</item>
		<item>
			name     = decompress
			type     = gunzip
			on_error = die
		</item>
		<item>
			name        = validate_file
			type        = validate
			file_type   = csv
			on_error    = ignore
		</item>
	</pre_process>
	<process>
		<item>
			name = load
			type = csv_loader			
		</item>
	</process>
	<post_process>
		<item>
			name=compress
			type=gzip
		</item>
	</post_process>
</prices>

<admin>
	type = serial
	
	# Can be left out if not called
	<pre_process />
	<process>
		<item>
			name     = gen_stats
			type     = plsql
			proc     = admin.gen_schema_stats
			on_error = ignore
			
			<params>
				p_schema = datamart
			</params>
		</item>
	</process>
	
	# Post process left out
	
	next = admin partitions

</admin>

<empty>
	type = serial
</empty>

<no_type>

	<process>
		<item>
			name = dummy
		</item>
	</process>
	
</no_type>

<no_item_name>

	type = serial

	<process>
		<item>
			type = plsql
		</item>
	</process>
	
</no_item_name>

<no_item_type>

	type = serial

	<pre_process>
		<item>
			name = no item type
		</item>
	</pre_process>
	
	<process>
		<item>
			name = dummy
			type = dummy
		</item>
	</process>
	
</no_item_type>

<prices_relative>
	type               = iterative
	
	<config>
		filename_format    = ^(prices(\d{14}).csv)(?:\.gz(?:\.pgp)?)?$
		posix_date_fomat   = %Y%m%d%H%M%S
		incoming_dir       = data/comit/incoming
		archive_dir        = data/comit/archive
		fail_dir           = data/comit/fail		
		table_name         = stg_prices
		controlfile_dir    = data/load/conf/control
		controlfile        = final_price.ctl
		on_error           = die
	</config>
	
	<pre_process>
		<item>
			name     = decrypt
			type     = perl
			package  = DW::Decrypt
			method   = decrypt			
			on_error = next
			<params/>
		</item>
		<item>
			name     = decompress
			type     = gunzip
			on_error = die
		</item>
		<item>
			name        = validate_file
			type        = validate
			file_type   = csv
			on_error    = ignore
		</item>
	</pre_process>
	<process>
		<item>
			name = load
			type = csv_loader			
		</item>
	</process>
	<post_process>
		<item>
			name=compress
			type=gzip
		</item>
	</post_process>
</prices_relative>
